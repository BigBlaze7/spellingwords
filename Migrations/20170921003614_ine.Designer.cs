// <auto-generated />
using ConsoleApp.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace spellingwords.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20170921003614_ine")]
    partial class ine
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("ConsoleApp.SQLite.Answer", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Correct");

                    b.Property<int>("SpellingTestID");

                    b.Property<int>("SpellingWordID");

                    b.Property<string>("Word");

                    b.HasKey("AnswerID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.SpellingList", b =>
                {
                    b.Property<int>("SpellingListID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SpellingListID");

                    b.ToTable("SpellingLists");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.SpellingTest", b =>
                {
                    b.Property<int>("SpellingTestID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Grade");

                    b.Property<int>("SpellingListID");

                    b.Property<string>("User");

                    b.HasKey("SpellingTestID");

                    b.HasIndex("SpellingListID");

                    b.ToTable("SpellingTests");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.SpellingWord", b =>
                {
                    b.Property<int>("SpellingWordID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SpellingListID");

                    b.Property<string>("Word");

                    b.HasKey("SpellingWordID");

                    b.HasIndex("SpellingListID");

                    b.ToTable("SpellingWords");
                });

            modelBuilder.Entity("ConsoleApp.SQLite.Post", b =>
                {
                    b.HasOne("ConsoleApp.SQLite.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp.SQLite.SpellingTest", b =>
                {
                    b.HasOne("ConsoleApp.SQLite.SpellingList")
                        .WithMany("SpellingTests")
                        .HasForeignKey("SpellingListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp.SQLite.SpellingWord", b =>
                {
                    b.HasOne("ConsoleApp.SQLite.SpellingList")
                        .WithMany("SpellingWords")
                        .HasForeignKey("SpellingListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
